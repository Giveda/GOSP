######################################################################
# Automatically generated by qmake (1.07a) Tue Dec 13 13:50:29 2011
######################################################################

TEMPLATE = lib
CONFIG += debug
CONFIG += staticlib
QT -= core gui
DEPENDPATH += .
INCLUDEPATH += include /usr/include/freetype2 /usr/include/libpng12 
#LIBS += -lpthread -lrt -lfreetype -ljpeg -lpng12
QMAKE_CXXFLAGS += -std=c++11 -Wno-pmf-conversions -Wno-unused-result -Wno-sign-compare
DESTDIR += ../lib
MOC_DIR += ../moc_obj
OBJECTS_DIR += ../moc_obj
INCLUDEPATH += simulator

DEFINES += CONFIG_COMPILER_PREFIX=\"\" \
CONFIG_DEBUG_ENABLED=y \
CONFIG_STD_CPP11=y \
CONFIG_OPT4_RAM=y \
CONFIG_LINUX_POSIX=y \
CONFIG_GUI_MODE_MULTI_FORM=y \
CONFIG_GIMG_FW_NUM_NEEDED=13 \
CONFIG_KEY_EVENT_ENABLED=y \
CONFIG_KEY_PRESS_EVENT_ENABLED=y \
CONFIG_MOUSE_EVENT_ENABLED=y \
CONFIG_KEY_PRESS_EVENT_LOCAL=y \
CONFIG_MOUSE_EVENT_LOCAL=y \
CONFIG_PF_ARGB8888=y \
CONFIG_gBrush=y \
CONFIG_gColor=y \
CONFIG_gCtrlButton=y \
CONFIG_gCtrlForm=y \
CONFIG_gCtrlIconView=y \
CONFIG_gCtrlItem=y \
CONFIG_gCtrlLineEdit=y \
CONFIG_gCtrlListBox=y \
CONFIG_gCtrlMsgBox=y \
CONFIG_gCtrlProgressBar=y \
CONFIG_gCtrlRadioButtonGroup=y \
CONFIG_gEvent=y \
CONFIG_gFont=y \
CONFIG_gFontmetrics=y \
CONFIG_gImage=y \
CONFIG_gInputHandler=y \
CONFIG_gMap=y \
CONFIG_gMItem=y \
CONFIG_gNativePainter=y \
CONFIG_gObject=y \
CONFIG_gObject_cpp11=y \
CONFIG_gPaintDevice=y \
CONFIG_gPainter=y \
CONFIG_gPointer=y \
CONFIG_gPoint=y \
CONFIG_gPtrList=y \
CONFIG_gRect=y \
CONFIG_gRegExp=y \
CONFIG_gRegion=y \
CONFIG_gRwLock=y \
CONFIG_gSharedData=y \
CONFIG_gSize=y \
CONFIG_gString=y \
CONFIG_gTimer=y \
CONFIG_gUIEvent=y \
CONFIG_gUIEvtLoop=y \
CONFIG_gWinSys=y \
CONFIG_SUPPORT_PNG \
CONFIG_ENABLE_IMAGE_SMOOTHSCALE

contains(DEFINES, CONFIG_QT_SIMULATOR) {
QT += core gui
greaterThan(QT_MAJOR_VERSION, 4): QT += widgets
message("config for Linux Desktop(such as fedora or ubuntu), based on Qt & X11")
} else: contains(DEFINES, CONFIG_R_SCREEN_LINUX_FB) {
QT -= core gui
greaterThan(QT_MAJOR_VERSION, 4): QT -= widgets
message("config for Embedded Linux Device(such as TV or DVR), based on Linux Framebuffer")
} else {
error("DEFINES not set, please refer to the manual!")
}

strip.commands = strip $(DESTDIR)$(TARGET)
GMAKE_EXTRA_TARGETS += strip

# Input
HEADERS += eventlist_p.h \
           gCtrlStyle.h \
           gCtrlView.h \
           gImage_p.h \
           gPaintEnginefactory.h \
           sem.h \
           include/gConstDefine.h \
           include/gPortingQt.h \
           include/gUIEvtLoop.h \
           include/gBrush.h \
           include/gColor.h \
           include/gCtrlButton.h \
           include/gCtrlForm.h \
           include/gCtrlIconView.h \
           include/gCtrlIconViewItem.h \
           include/gCtrlItem.h \
           include/gCtrlLineEdit.h \
           include/gCtrlListBox.h \
           include/gCtrlMsgBox.h \
           include/gCtrlProgressBar.h \
           include/gCtrlRadioButtonGroup.h \
           include/gEvent.h \
           include/gFont.h \
           include/gFontMetrics.h \
           include/gGlobal.h \
           include/gPointer.h \
           include/gImage.h 
if(contains(DEFINES,CONFIG_R_SCREEN_LINUX_FB)){
HEADERS += include/gInputHandler.h \
           include/gLinuxFB.h
}
HEADERS += include/gMap.h \
           include/gObject.h \
           include/gMItem.h \
           include/gPaintDevice.h \
           include/gPaintEngine.h \
           include/gPainter.h \
           include/gPainter_p.h \
           include/gPixmap.h \
           include/gPoint.h \
           include/gPtrList.h \
           include/gRect.h \
           include/gRegExp.h \
           include/gShared.h \
           include/gSize.h \
           include/gString.h \
           include/gTimer.h

if(contains(DEFINES,CONFIG_QT_SIMULATOR)){
HEADERS += simulator/gscreenonqt.h
}

SOURCES += eventlist_p.cpp \
           gUIEvtLoop.cpp \
           gBrush.cpp \
           gColor.cpp \
           gCtrlButton.cpp \
           gCtrlForm.cpp \
           gCtrlIconView.cpp \
           gCtrlIconViewItem.cpp \
           gCtrlItem.cpp \
           gCtrlLineEdit.cpp \
           gCtrlListBox.cpp \
           gCtrlMsgBox.cpp \
           gCtrlProgressBar.cpp \
           gCtrlRadioButtonGroup.cpp \
           gCtrlStyle.cpp \
           gCtrlView.cpp \
           gEvent.cpp \
           gFont.cpp \
           gFontMetrics.cpp \
           gGlobal.cpp \
           gPointer.cpp \
           gImage.cpp \
           gImage_p.cpp

if(contains(DEFINES,CONFIG_R_SCREEN_LINUX_FB)){
	SOURCES += gInputHandler.cpp
}

if(contains(DEFINES,CONFIG_SUPPORT_JPEG)){
SOURCES += gJpegIO.cpp
}

if(contains(DEFINES,CONFIG_R_SCREEN_LINUX_FB)){
	SOURCES += gLinuxFB.cpp
}

SOURCES += gObject.cpp \
           gMItem.cpp \
           gPaintDevice.cpp \
           gPaintEngine.cpp \
           gPaintEnginefactory.cpp \
           gPainter.cpp \
           gPainter_p.cpp \
           gPixmap.cpp 

if(contains(DEFINES,CONFIG_SUPPORT_PNG)){
SOURCES += gPngIO.cpp
}

SOURCES += gPoint.cpp \
           gRect.cpp \
           gRegExp.cpp \
           gSize.cpp \
           gString.cpp \
           gTimer.cpp \
           sem.cpp

if(contains(DEFINES,CONFIG_QT_SIMULATOR)){
SOURCES += simulator/gscreenonqt.cpp \
            gGlueQtScreen.cpp
#simulator/moc_gscreenonqt.cpp
}
